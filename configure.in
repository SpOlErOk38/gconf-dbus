AC_DEFUN([AC_FYI], [echo "FYI: " $1])

AC_INIT(gconf/gconf.h)

AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(gconf-dbus, 2.6.4.7)

AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CXX
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_ARG_PROGRAM
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac

  if test "x$enable_ansi" = "xyes"; then
    case " $CFLAGS " in
    *[\ \	]-ansi[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -ansi" ;;
    esac

    case " $CFLAGS " in
    *[\ \	]-pedantic[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -pedantic" ;;
    esac
  fi
fi
changequote([,])dnl

dnl used to rename everything and support simultaneous installs.
dnl not incremented for bugfix or unstable releases.
MAJOR_VERSION=2
AC_SUBST(MAJOR_VERSION)

GETTEXT_PACKAGE=GConf$MAJOR_VERSION
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])

dnl libtool versioning for libgconf

dnl increment if the interface has additions, changes, removals.
GCONF_CURRENT=5

dnl increment any time the source changes; set to 
dnl  0 if you increment CURRENT
GCONF_REVISION=0

dnl increment if any interfaces have been added; set to 0
dnl  if any interfaces have been removed. removal has 
dnl  precedence over adding, so set to 0 if both happened.
GCONF_AGE=1

AC_SUBST(GCONF_CURRENT)
AC_SUBST(GCONF_REVISION)
AC_SUBST(GCONF_AGE)

# find the actual value for $prefix that we'll end up with
REAL_PREFIX=
if test "x$prefix" = "xNONE"; then
  REAL_PREFIX=$ac_default_prefix
else
  REAL_PREFIX=$prefix
fi

# Have to go $sysconfdir->$prefix/etc->/usr/local/etc   
# if you actually know how to code shell then fix this :-)
SYSCONFDIR_TMP="$sysconfdir"
old_prefix=$prefix
prefix=$REAL_PREFIX
EXPANDED_SYSCONFDIR=`eval echo $SYSCONFDIR_TMP`
prefix=$old_prefix
AC_SUBST(EXPANDED_SYSCONFDIR)

dnl Save flags to aclocal
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

dnl Specify the configuration source, default to xml::$(sysconfdir)/gconf/gconf.xml.defaults

GCONF_CONFIG_SOURCE=
AC_ARG_ENABLE(gconf-source, 
            [  --enable-gconf-source=sourceaddress      Where to install schema files.],GCONF_CONFIG_SOURCE=$enable_gconf_source,)

if test "x$GCONF_CONFIG_SOURCE" = "x"; then
        GCONF_CONFIG_SOURCE="xml::\${sysconfdir}/gconf/gconf.xml.defaults"
	INSTALL_GCONF_CONFIG_SOURCE="xml::\$(DESTDIR)\${sysconfdir}/gconf/gconf.xml.defaults"
        AC_FYI("Using default config source $GCONF_CONFIG_SOURCE for schema installation")
else
        AC_FYI("Using config source $GCONF_CONFIG_SOURCE for schema installation")
fi

AC_SUBST(GCONF_CONFIG_SOURCE)
AC_SUBST(INSTALL_GCONF_CONFIG_SOURCE)

dnl Default to debug spew in unstable branch
AC_ARG_ENABLE(debug, 
            [  --enable-debug=[no/yes/minimum]      Compile with debug checks.],,enable_debug=minimum)

if test "x$enable_debug" = "xyes"; then
        CFLAGS="$CFLAGS -DGCONF_ENABLE_DEBUG=1"
        AC_FYI("Will build with debugging spew and checks")
else
  if test "x$enable_debug" = "xno"; then
          CFLAGS="$CFLAGS -DG_DISABLE_CHECKS=1 -DG_DISABLE_ASSERT=1"
          AC_FYI("Will build without *any* debugging code")
  else
          AC_FYI("Will build with debug checks but no debug spew")
  fi
fi

AC_ARG_WITH(html-dir, [  --with-html-dir=PATH path to installed docs ])

if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gtk-doc/html'
else
  HTML_DIR=$with_html_dir
fi

AC_SUBST(HTML_DIR)


AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.6
if $GTKDOC ; then 
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])

    IFS="${IFS= 	}"; gconf_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
        cur=$1; shift
        if test -z $min ; then break; fi
        if test -z $cur ; then GTKDOC=false; break; fi
        if test $cur -gt $min ; then break ; fi
        if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$gconf_save_IFS"

    if $GTKDOC ; then
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

AC_CHECK_PROG(DB2HTML, db2html, true, false)
AM_CONDITIONAL(HAVE_DOCBOOK, $DB2HTML)

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no 
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

AC_ARG_ENABLE(gtk, [  --enable-gtk          Enable GTK+ support (for gconf-sanity-check) [default=auto]], enable_gtk="$enableval", enable_gtk=auto)

AC_ARG_ENABLE(system-bus, [  --enable-system-bus Use the system bus instead of session bus], enable_system_bus="$enableval", enable_system_bus=no)

AM_CONDITIONAL(USE_SYSTEM_BUS, test x$enable_system_bus = xyes)
if test x$enable_system_bus = xyes; then
  AC_DEFINE(USE_SYSTEM_BUS, 1, Use the system bus)
fi

AC_ARG_WITH(ipc, [  --with-ipc=[orbit/dbus/both]   choose ipc mechanism to use in the daemon, [default=dbus]], with_ipc="$withval", with_ipc=dbus)

if test x$with_ipc = xorbit -o x$with_ipc = xboth; then
  PKG_CHECK_MODULES(GCONF_ORBIT, ORBit-2.0 >= 2.6.0, have_orbit=yes, have_orbit=no)
  if test x$have_orbit = xno ; then
    AC_MSG_WARN([ORBit development libraries not found])
    have_orbit=no
  else
    ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
    AC_SUBST(ORBIT_IDL)
    AC_DEFINE(HAVE_ORBIT, 1, ORBit support in the daemon)
  fi
else 
  have_orbit=no
fi

PC_REQUIRES=ORBit-2.0

if test x$with_ipc = xdbus -o x$with_ipc = xboth; then
  PKG_CHECK_MODULES(GCONF_DBUS, dbus-glib-1 >= 0.22, have_dbus=yes, have_dbus=no)
  if test x$have_dbus = xyes; then
    AC_DEFINE(HAVE_DBUS, 1, D-BUS support in the daemon)
    PC_REQUIRES="dbus-1 dbus-glib-1"
  fi
else
  have_dbus=no
fi

AC_SUBST(PC_REQUIRES)

if test x$have_orbit = xno -a x$have_dbus = xno; then
  AC_MSG_ERROR([You need either ORBit or D-BUS for IPC])
fi

AM_CONDITIONAL(HAVE_ORBIT, test x$have_orbit = xyes)
AM_CONDITIONAL(HAVE_DBUS, test x$have_dbus = xyes)

dnl ORBit/D-BUS flags
GCONF_IPC_CFLAGS="$GCONF_ORBIT_CFLAGS $GCONF_DBUS_CFLAGS"
GCONF_IPC_LIBS="$GCONF_ORBIT_LIBS $GCONF_DBUS_LIBS"

AC_SUBST(GCONF_IPC_CFLAGS)
AC_SUBST(GCONF_IPC_LIBS)

AC_ARG_WITH(dbus_service_dir, [  --with-dbus-service-dir=PATH choose directory for dbus service files, [default=PREFIX/share/dbus-1/services]], with_dbus_service_dir="$withval", with_dbus_service_dir=$datadir/dbus-1/services)

DBUS_SERVICE_DIR=$with_dbus_service_dir
AC_SUBST(DBUS_SERVICE_DIR)

PKGCONFIG_MODULES='gmodule-2.0 >= 2.0.1 gobject-2.0 >= 2.0.1'
PKGCONFIG_MODULES_WITH_XML="$PKGCONFIG_MODULES libxml-2.0"
PKGCONFIG_MODULES_WITH_GTK=" $PKGCONFIG_MODULES gtk+-2.0 >= 2.0.0"
PKGCONFIG_MODULES_WITH_XML_AND_GTK=" $PKGCONFIG_MODULES gtk+-2.0 libxml-2.0"

PKG_CHECK_MODULES(DEPENDENT, $PKGCONFIG_MODULES)
PKG_CHECK_MODULES(DEPENDENT_WITH_XML, $PKGCONFIG_MODULES_WITH_XML)

if test "x$enable_gtk" != "xno"; then
  PKG_CHECK_MODULES(DEPENDENT_WITH_GTK, $PKGCONFIG_MODULES_WITH_GTK, HAVE_GTK=yes, HAVE_GTK=no)
  PKG_CHECK_MODULES(DEPENDENT_WITH_XML_AND_GTK, $PKGCONFIG_MODULES_WITH_XML_AND_GTK, ,
                    DEPENDENT_WITH_XML_AND_GTK_CFLAGS=$DEPENDENT_WITH_XML_CFLAGS DEPENDENT_WITH_XML_AND_GTK_LIBS=$DEPENDENT_WITH_XML_LIBS)

  if test "x$enable_gtk" = "xyes" && test "x$HAVE_GTK" = "xno"; then
    AC_MSG_ERROR([[
*** Could not find GTK+ 2.0 or greater.
*** Go to http://www.gtk.org/ to get it.]])
  fi
else
  HAVE_GTK=no
  DEPENDENT_WITH_XML_AND_GTK_CFLAGS=$DEPENDENT_WITH_XML_CFLAGS
  DEPENDENT_WITH_XML_AND_GTK_LIBS=$DEPENDENT_WITH_XML_LIBS
fi

AM_CONDITIONAL(GTK, test x$HAVE_GTK != xno)

AC_SUBST(DEPENDENT_LIBS)
AC_SUBST(DEPENDENT_CFLAGS)
AC_SUBST(DEPENDENT_WITH_XML_LIBS)
AC_SUBST(DEPENDENT_WITH_XML_CFLAGS)
AC_SUBST(DEPENDENT_WITH_GTK_LIBS)
AC_SUBST(DEPENDENT_WITH_GTK_CFLAGS)
AC_SUBST(DEPENDENT_WITH_XML_AND_GTK_LIBS)
AC_SUBST(DEPENDENT_WITH_XML_AND_GTK_CFLAGS)


AC_CHECK_LIB(popt, poptGetArg, POPT_LIBS=-lpopt,
	[AC_CHECK_HEADER(popt.h, , AC_MSG_ERROR([[
*** Couldn't find popt. Please download and install from
*** ftp://ftp.rpm.org/pub/rpm/dist/rpm-4.0.x/ and try again.]]))])
AC_SUBST(POPT_LIBS)

AC_CHECK_HEADER(pthread.h, have_pthreads=yes)
AM_CONDITIONAL(PTHREADS, test -n "$have_pthreads")

AC_CHECK_FUNCS(usleep)

AC_CHECK_FUNCS(flockfile)

ALL_LINGUAS="am ar az be bg bn ca cs cy da de el en_GB es eu fa fi fr ga gl hi hr hu id it ja ko lt lv mk ml mn ms nl nn no pl pt pt_BR ro ru sk sl sq sr sr@Latn sv tr uk vi yi zh_CN zh_TW ta"

AM_GLIB_GNU_GETTEXT

# AM_GNU_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gconflocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gconflocaledir)

AC_CHECK_FUNCS(bind_textdomain_codeset)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

## Just for debugging purposes
absolute_top_srcdir=`pwd`
AC_SUBST(absolute_top_srcdir)

# define a MAINT-like variable REBUILD which is set if Perl
# and awk are found, so autogenerated sources can be rebuilt

AC_PROG_AWK
AC_CHECK_PROGS(PERL, perl5 perl)

# We would like indent, but don't require it.
AC_CHECK_PROG(INDENT, indent, indent)

_found_perl=0
if test -n "$PERL" && $PERL -v | grep 'version 5.' > /dev/null ; then
  _found_perl=1
else
  # The version string for perl changed for 'version 5' to 'v5' in
  # perl 5.6 or therabouts
  if test -n "$PERL" && $PERL -v | grep 'v5.' > /dev/null ; then
    _found_perl=1
  fi
fi

REBUILD=\#
if test $_found_perl -eq 1; then
  if test -n "$AWK" ; then 
    REBUILD=
  fi
fi
AC_SUBST(REBUILD)

AC_OUTPUT([
Makefile
gconf.m4
gconf/Makefile
gconf/default.path
backends/Makefile
po/Makefile.in
doc/Makefile
doc/gconf/Makefile
examples/Makefile
tests/Makefile
gconf-2.0.pc
])

echo
echo "IPC method      : $with_ipc"
echo "Dbus service dir: $DBUS_SERVICE_DIR"
echo

